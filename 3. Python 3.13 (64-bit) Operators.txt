>>> # Arithmetic Operations in Python
>>> # Integers
>>>
>>> print('Addition: ', 1 + 2)
Addition:  3
>>> print('Subtraction: ', 2 - 1)
Subtraction:  1
>>> print('Multiplication: ', 2 * 3)
Multiplication:  6
>>> print ('Division: ', 4 / 2)                         # Division in python gives floating number
Division:  2.0
>>> print('Division: ', 6 / 2)
Division:  3.0
>>> print('Division: ', 7 / 2)
Division:  3.5
>>> print('Division without the remainder: ', 7 // 2)   # gives without the floating number or without the remaining
Division without the remainder:  3
>>> print('Modulus: ', 3 % 2)                           # Gives the remainder
Modulus:  1
>>> print ('Division without the remainder: ', 7 // 3)
Division without the remainder:  2
>>> print('Exponential: ', 3 ** 2)                     # it means 3 * 3
Exponential:  9
>>>
>>> # Floating numbers
>>> print('Floating Number,PI', 3.14)
Floating Number,PI 3.14
>>> print('Floating Number, gravity', 9.81)
Floating Number, gravity 9.81
>>>
>>> # Complex numbers
>>> print('Complex number: ', 1 + 1j)
Complex number:  (1+1j)
>>> print('Multiplying complex number: ',(1 + 1j) * (1-1j))
Multiplying complex number:  (2+0j)
>>>
>>> # Declaring the variable at the top first
>>>
>>> a = 3 # a is a variable name and 3 is an integer data type
>>> b = 2 # b is a variable name and 3 is an integer data type
>>>
>>> # Arithmetic operations and assigning the result to a variable
>>> total = a + b
>>> diff = a - b
>>> product = a * b
>>> division = a / b
>>> remainder = a % b
>>> floor_division = a // b
>>> exponential = a ** b
>>>
>>> # I should have used sum instead of total but sum is a built-in function try to avoid overriding builtin functions
>>> print(total) # if you don't label your print with some string, you never know from where is  the result is coming
5
>>> print('a + b = ', total)
a + b =  5
>>> print('a - b = ', diff)
a - b =  1
>>> print('a * b = ', product)
a * b =  6
>>> print('a / b = ', division)
a / b =  1.5
>>> print('a % b = ', remainder)
a % b =  1
>>> print('a // b = ', floor_division)
a // b =  1
>>> print('a ** b = ', exponential)
a ** b =  9
>>>
>>> # Declaring values and organizing them together
>>> num_one = 3
>>> num_two = 4
>>>
>>> # Arithmetic operations
>>> total = num_one + num_two
>>> diff = num_two - num_one
>>> product = num_one * num_two
>>> div = num_two / num_two
>>> remainder = num_two % num_one
>>>
>>> # Printing values with label
>>> print('total: ', total)
total:  7
>>> print('difference: ', diff)
difference:  1
>>> print('product: ', product)
product:  12
>>> print('division: ', div)
division:  1.0
>>> print('remainder: ', remainder)
remainder:  1
>>>
>>>
>>> # Calculating area of a circle
>>> radius = 10                                 # radius of a circle
>>> area_of_circle = 3.14 * radius ** 2         # two * sign means exponent or power
>>> print('Area of a circle:', area_of_circle)
Area of a circle: 314.0
>>>
>>> # Calculating area of a rectangle
>>> length = 10
>>> width = 20
>>> area_of_rectangle = length * width
>>> print('Area of rectangle:', area_of_rectangle)
Area of rectangle: 200
>>>
>>> # Calculating a weight of an object
>>> mass = 75
>>> gravity = 9.81
>>> weight = mass * gravity
>>> print(weight, 'N')
735.75 N
>>>
>>> print(3 > 2)     # True, because 3 is greater than 2
True
>>> print(3 >= 2)    # True, because 3 is greater than 2
True
>>> print(3 < 2)     # False,  because 3 is greater than 2
False
>>> print(2 < 3)     # True, because 2 is less than 3
True
>>> print(2 <= 3)    # True, because 2 is less than 3
True
>>> print(3 == 2)    # False, because 3 is not equal to 2
False
>>> print(3 != 2)    # True, because 3 is not equal to 2
True
>>> print(len('mango') == len('avocado'))  # False
False
>>> print(len('mango') != len('avocado'))  # True
True
>>> print(len('mango') < len('avocado'))   # True
True
>>> print(len('milk') != len('meat'))      # False
False
>>> print(len('milk') == len('meat'))      # True
True
>>> print(len('tomato') == len('potato'))  # True
True
>>> print(len('python') > len('dragon'))   # False
False
>>>
>>> # Boolean comparison
>>> print('True == True: ', True == True)
True == True:  True
>>> print('True == False: ', True == False)
True == False:  False
>>> print('False == False:', False == False)
False == False: True
>>> print('True and True: ', True and True)
True and True:  True
>>> print('True or False:', True or False)
True or False: True
>>>
>>> # Another way comparison
>>> print('1 is 1', 1 is 1)                   # True - because the data values are the same
<python-input-105>:1: SyntaxWarning: "is" with 'int' literal. Did you mean "=="?
  print('1 is 1', 1 is 1)                   # True - because the data values are the same
1 is 1 True
>>> print('1 is not 2', 1 is not 2)           # True - because 1 is not 2
<python-input-106>:1: SyntaxWarning: "is not" with 'int' literal. Did you mean "!="?
  print('1 is not 2', 1 is not 2)           # True - because 1 is not 2
1 is not 2 True
>>> print('A in Asabeneh', 'A' in 'Asabeneh') # True - A found in the string
A in Asabeneh True
>>> print('B in Asabeneh', 'B' in 'Asabeneh') # False -there is no uppercase B
B in Asabeneh False
>>> print('coding' in 'coding for all') # True - because coding for all has the word coding
True
>>> print('a in an:', 'a' in 'an')      # True
a in an: True
>>> print('4 is 2 ** 2:', 4 is 2 ** 2)   # True
<python-input-111>:1: SyntaxWarning: "is" with 'int' literal. Did you mean "=="?
  print('4 is 2 ** 2:', 4 is 2 ** 2)   # True
4 is 2 ** 2: True
>>>
>>> print(3 > 2 and 4 > 3) # True - because both statements are true
True
>>> print(3 > 2 and 4 < 3) # False - because the second statement is false
False
>>> print(3 < 2 and 4 < 3) # False - because both statements are false
False
>>> print(3 > 2 or 4 > 3)  # True - because both statements are true
True
>>> print(3 > 2 or 4 < 3)  # True - because one of the statement is true
True
>>> print(3 < 2 or 4 < 3)  # False - because both statements are false
False
>>> print(not 3 > 2)     # False - because 3 > 2 is true, then not True gives False
False
>>> print(not True)      # False - Negation, the not operator turns true to false
False
>>> print(not False)     # True
True
>>> print(not not True)  # True
True
>>> print(not not False) # False
